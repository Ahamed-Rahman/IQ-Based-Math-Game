{"ast":null,"code":"var _jsxFileName = \"A:\\\\IQ-Based Math Game\\\\IQ-Based Math Game\\\\frontend\\\\src\\\\components\\\\Levels.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Levels = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedLevel, setSelectedLevel] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"levels-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Difficulty Level\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), ['Easy', 'Medium', 'Hard'].map(level => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `level-btn ${selectedLevel === level ? 'selected' : ''}`,\n      onClick: () => setSelectedLevel(level),\n      children: level\n    }, level, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-btn\",\n      disabled: !selectedLevel,\n      onClick: () => navigate('/game', {\n        state: {\n          level: selectedLevel\n        }\n      }),\n      children: \"\\uD83D\\uDE80 Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(Levels, \"58VWEo8bdJRVBSAxaoogOc1sqrY=\", false, function () {\n  return [useNavigate];\n});\n_c = Levels;\nexport default Levels;\nvar _c;\n$RefreshReg$(_c, \"Levels\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Levels","_s","navigate","selectedLevel","setSelectedLevel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","level","onClick","disabled","state","_c","$RefreshReg$"],"sources":["A:/IQ-Based Math Game/IQ-Based Math Game/frontend/src/components/Levels.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Levels = () => {\r\n  const navigate = useNavigate();\r\n  const [selectedLevel, setSelectedLevel] = useState('');\r\n\r\n  return (\r\n    <div className=\"levels-container\">\r\n      <h2>Select Difficulty Level</h2>\r\n      {['Easy', 'Medium', 'Hard'].map((level) => (\r\n        <button\r\n          key={level}\r\n          className={`level-btn ${selectedLevel === level ? 'selected' : ''}`}\r\n          onClick={() => setSelectedLevel(level)}\r\n        >\r\n          {level}\r\n        </button>\r\n      ))}\r\n      <button\r\n        className=\"start-btn\"\r\n        disabled={!selectedLevel}\r\n        onClick={() => navigate('/game', { state: { level: selectedLevel } })}\r\n      >\r\n        ðŸš€ Start Game\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Levels;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,oBACEG,OAAA;IAAKM,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BP,OAAA;MAAAO,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/B,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,CAACC,GAAG,CAAEC,KAAK,iBACpCb,OAAA;MAEEM,SAAS,EAAE,aAAaF,aAAa,KAAKS,KAAK,GAAG,UAAU,GAAG,EAAE,EAAG;MACpEC,OAAO,EAAEA,CAAA,KAAMT,gBAAgB,CAACQ,KAAK,CAAE;MAAAN,QAAA,EAEtCM;IAAK,GAJDA,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKJ,CACT,CAAC,eACFX,OAAA;MACEM,SAAS,EAAC,WAAW;MACrBS,QAAQ,EAAE,CAACX,aAAc;MACzBU,OAAO,EAAEA,CAAA,KAAMX,QAAQ,CAAC,OAAO,EAAE;QAAEa,KAAK,EAAE;UAAEH,KAAK,EAAET;QAAc;MAAE,CAAC,CAAE;MAAAG,QAAA,EACvE;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACT,EAAA,CAzBID,MAAM;EAAA,QACOH,WAAW;AAAA;AAAAmB,EAAA,GADxBhB,MAAM;AA2BZ,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}