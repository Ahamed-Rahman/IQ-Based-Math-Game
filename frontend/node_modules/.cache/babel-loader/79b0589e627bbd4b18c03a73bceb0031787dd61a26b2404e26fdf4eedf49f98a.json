{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000\";\n\n// ✅ Fetch a new math question\nexport const fetchQuestion = async () => {\n  try {\n    const res = await axios.get(`${API_URL}/game/banana`);\n    return res.data;\n  } catch (error) {\n    console.error(\"Error fetching question\", error);\n    throw error;\n  }\n};\n\n// ✅ Update the user's score\nexport const updateScore = async (userId, score) => {\n  try {\n    await axios.post(`${API_URL}/game/update-score`, {\n      userId,\n      score\n    });\n  } catch (error) {\n    var _error$response;\n    console.error(\"Error updating score:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  }\n};\n\n// ✅ Fetch the user's current score from the database (NEW FUNCTION)\nexport const fetchUserScore = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const res = await axios.get(`${API_URL}/auth/user`, {\n      headers: {\n        Authorization: token\n      }\n    });\n    return res.data; // ✅ Return user data (including score)\n  } catch (error) {\n    console.error(\"Error fetching user score\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","fetchQuestion","res","get","data","error","console","updateScore","userId","score","post","_error$response","response","message","fetchUserScore","token","localStorage","getItem","headers","Authorization"],"sources":["A:/IQ-Based Math Game/IQ-Based Math Game/frontend/src/services/apiService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000\";\r\n\r\n// ✅ Fetch a new math question\r\nexport const fetchQuestion = async () => {\r\n  try {\r\n    const res = await axios.get(`${API_URL}/game/banana`);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching question\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ✅ Update the user's score\r\nexport const updateScore = async (userId, score) => {\r\n  try {\r\n    await axios.post(`${API_URL}/game/update-score`, { userId, score });\r\n  } catch (error) {\r\n    console.error(\"Error updating score:\", error.response?.data || error.message);\r\n  }\r\n};\r\n\r\n\r\n// ✅ Fetch the user's current score from the database (NEW FUNCTION)\r\nexport const fetchUserScore = async () => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    const res = await axios.get(`${API_URL}/auth/user`, {\r\n      headers: { Authorization: token },\r\n    });\r\n    return res.data; // ✅ Return user data (including score)\r\n  } catch (error) {\r\n    console.error(\"Error fetching user score\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;;AAEvC;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,cAAc,CAAC;IACrD,OAAOE,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,WAAW,GAAG,MAAAA,CAAOC,MAAM,EAAEC,KAAK,KAAK;EAClD,IAAI;IACF,MAAMV,KAAK,CAACW,IAAI,CAAC,GAAGV,OAAO,oBAAoB,EAAE;MAAEQ,MAAM;MAAEC;IAAM,CAAC,CAAC;EACrE,CAAC,CAAC,OAAOJ,KAAK,EAAE;IAAA,IAAAM,eAAA;IACdL,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAE,EAAAM,eAAA,GAAAN,KAAK,CAACO,QAAQ,cAAAD,eAAA,uBAAdA,eAAA,CAAgBP,IAAI,KAAIC,KAAK,CAACQ,OAAO,CAAC;EAC/E;AACF,CAAC;;AAGD;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMf,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,YAAY,EAAE;MAClDkB,OAAO,EAAE;QAAEC,aAAa,EAAEJ;MAAM;IAClC,CAAC,CAAC;IACF,OAAOb,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}