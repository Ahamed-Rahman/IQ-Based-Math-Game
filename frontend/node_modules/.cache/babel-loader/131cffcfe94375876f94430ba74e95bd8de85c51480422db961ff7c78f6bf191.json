{"ast":null,"code":"var _jsxFileName = \"A:\\\\IQ-Based Math Game\\\\IQ-Based Math Game\\\\frontend\\\\src\\\\components\\\\GameDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/GameDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [score, setScore] = useState(0);\n  const [bananas, setBananas] = useState([]); // Store bananas as an array\n  const [obstacles, setObstacles] = useState([]);\n  const [monkeyPos, setMonkeyPos] = useState(50);\n  const [isJumping, setIsJumping] = useState(false);\n  const username = localStorage.getItem('username');\n  useEffect(() => {\n    if (!location.state || !location.state.level) {\n      navigate('/levels');\n    }\n\n    // Generate bananas at random positions\n    const bananaInterval = setInterval(() => {\n      setBananas(prev => [...prev, {\n        left: Math.random() * 80 + 10,\n        top: Math.random() * 50 + 20\n      }]);\n    }, 3000);\n\n    // Generate falling obstacles\n    const obstacleInterval = setInterval(() => {\n      setObstacles(prev => [...prev, {\n        left: 100\n      }]);\n    }, 4000);\n    return () => {\n      clearInterval(bananaInterval);\n      clearInterval(obstacleInterval);\n    };\n  }, [location, navigate]);\n  const collectBanana = async () => {\n    setScore(prev => prev + 10);\n    try {\n      await axios.post('http://localhost:5000/game/update-score', {\n        username,\n        score: 10\n      });\n\n      // Remove a collected banana\n      setBananas(prev => prev.slice(1));\n    } catch (error) {\n      console.error('Error updating score:', error);\n    }\n  };\n  const jump = () => {\n    if (!isJumping) {\n      setIsJumping(true);\n      setMonkeyPos(20);\n      setTimeout(() => {\n        setMonkeyPos(50);\n        setIsJumping(false);\n      }, 500);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\uD83C\\uDF4C Welcome to \", location.state.level, \" Mode \\uD83C\\uDF4C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"score\",\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"bananas\",\n      children: [\"Bananas Collected: \", bananas.length, \" \\uD83C\\uDF4C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/monkey.jpg\",\n        alt: \"Monkey\",\n        className: `monkey ${isJumping ? 'jump' : ''}`,\n        style: {\n          bottom: `${monkeyPos}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), bananas.map((banana, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/banana.jpg\",\n        alt: \"Banana\",\n        className: \"banana\",\n        style: {\n          left: `${banana.left}%`,\n          top: `${banana.top}%`\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)), obstacles.map((obstacle, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/coconut.jpg\",\n        alt: \"Coconut\",\n        className: \"obstacle\",\n        style: {\n          left: `${obstacle.left}%`\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"game-action-btn\",\n        onClick: collectBanana,\n        children: \"\\uD83C\\uDF4C Collect Banana\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"jump-btn\",\n        onClick: jump,\n        children: \"\\uD83D\\uDC35 Jump\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"quit-btn\",\n        onClick: () => navigate('/levels'),\n        children: \"\\uD83D\\uDD19 Quit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"/7gwi9iG+izNHlksEp3k4j0a76w=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","Game","_s","location","navigate","score","setScore","bananas","setBananas","obstacles","setObstacles","monkeyPos","setMonkeyPos","isJumping","setIsJumping","username","localStorage","getItem","state","level","bananaInterval","setInterval","prev","left","Math","random","top","obstacleInterval","clearInterval","collectBanana","post","slice","error","console","jump","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","src","alt","style","bottom","map","banana","index","obstacle","onClick","_c","$RefreshReg$"],"sources":["A:/IQ-Based Math Game/IQ-Based Math Game/frontend/src/components/GameDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../styles/GameDisplay.css';\r\n\r\nconst Game = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [score, setScore] = useState(0);\r\n  const [bananas, setBananas] = useState([]); // Store bananas as an array\r\n  const [obstacles, setObstacles] = useState([]);\r\n  const [monkeyPos, setMonkeyPos] = useState(50);\r\n  const [isJumping, setIsJumping] = useState(false);\r\n  const username = localStorage.getItem('username');\r\n\r\n  useEffect(() => {\r\n    if (!location.state || !location.state.level) {\r\n      navigate('/levels');\r\n    }\r\n\r\n    // Generate bananas at random positions\r\n    const bananaInterval = setInterval(() => {\r\n      setBananas((prev) => [\r\n        ...prev,\r\n        { left: Math.random() * 80 + 10, top: Math.random() * 50 + 20 },\r\n      ]);\r\n    }, 3000);\r\n\r\n    // Generate falling obstacles\r\n    const obstacleInterval = setInterval(() => {\r\n      setObstacles((prev) => [...prev, { left: 100 }]);\r\n    }, 4000);\r\n\r\n    return () => {\r\n      clearInterval(bananaInterval);\r\n      clearInterval(obstacleInterval);\r\n    };\r\n  }, [location, navigate]);\r\n\r\n  const collectBanana = async () => {\r\n    setScore((prev) => prev + 10);\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/game/update-score', {\r\n        username,\r\n        score: 10,\r\n      });\r\n\r\n      // Remove a collected banana\r\n      setBananas((prev) => prev.slice(1));\r\n    } catch (error) {\r\n      console.error('Error updating score:', error);\r\n    }\r\n  };\r\n\r\n  const jump = () => {\r\n    if (!isJumping) {\r\n      setIsJumping(true);\r\n      setMonkeyPos(20);\r\n      setTimeout(() => {\r\n        setMonkeyPos(50);\r\n        setIsJumping(false);\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <h1>🍌 Welcome to {location.state.level} Mode 🍌</h1>\r\n      <h2 className=\"score\">Score: {score}</h2>\r\n      <h2 className=\"bananas\">Bananas Collected: {bananas.length} 🍌</h2>\r\n\r\n      <div className=\"game-area\">\r\n        {/* Monkey Character */}\r\n        <img\r\n          src=\"/assets/monkey.jpg\"\r\n          alt=\"Monkey\"\r\n          className={`monkey ${isJumping ? 'jump' : ''}`}\r\n          style={{ bottom: `${monkeyPos}%` }}\r\n        />\r\n\r\n        {/* Bananas Appearing in the Game Area */}\r\n        {bananas.map((banana, index) => (\r\n          <img\r\n            key={index}\r\n            src=\"/assets/banana.jpg\"\r\n            alt=\"Banana\"\r\n            className=\"banana\"\r\n            style={{ left: `${banana.left}%`, top: `${banana.top}%` }}\r\n          />\r\n        ))}\r\n\r\n        {/* Falling Coconuts */}\r\n        {obstacles.map((obstacle, index) => (\r\n          <img\r\n            key={index}\r\n            src=\"/assets/coconut.jpg\"\r\n            alt=\"Coconut\"\r\n            className=\"obstacle\"\r\n            style={{ left: `${obstacle.left}%` }}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"controls\">\r\n        <button className=\"game-action-btn\" onClick={collectBanana}>\r\n          🍌 Collect Banana\r\n        </button>\r\n        <button className=\"jump-btn\" onClick={jump}>\r\n          🐵 Jump\r\n        </button>\r\n        <button className=\"quit-btn\" onClick={() => navigate('/levels')}>\r\n          🔙 Quit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}